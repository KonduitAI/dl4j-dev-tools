#!/usr/bin/env bash

set -o errexit
set -o pipefail

function ignorealltests {
	cat $1 | perl -pe 's/(^\s*\/\/|\s+\/\/).*$//' | perl -pe 's/\n/\g/' | perl -pe 's/\@Ignore(\((\".*?\")\))*.*?public\s+class\s+(\S+)/\nIGNORED ALL TESTS *,$2\n/g' | grep IGNORED | perl -pe 's/IGNORED ALL TESTS //g'
}

function ignoredtests {
	cat $1 | perl -pe 's/(^\s*\/\/|\s+\/\/).*$//' | perl -pe 's/\n/\g/' | perl -pe 's/\@Ignore(\((\".*?\")\))*.*?public\s+void\s+(\S+)\(/\nIGNORED TEST $3,$2\n/g' | grep IGNORED | perl -pe 's/IGNORED TEST //g'
}

if [ -z $LIBND4J_HOME ]; then
    echo "ERROR: LIBND4J_HOME is either unset or set to a non-empty string. Set LIBND4J_HOME and rerun.Exiting script..." 1>&2
	exit 13
fi

DL4JBASEDIR=`dirname $LIBND4J_HOME`
echo -e "\nFound DL4J base dir: $DL4JBASEDIR"


if [ $# -eq 0 ]; then
    echo -e "\nNo arguments supplied.Checks will be run on:\n\tnd4j\n\tdeeplearning4j\n\tdatavec\n\tarbiter\n\trl4j"
	CHECKDIRS=(nd4j deeplearning4j datavec arbiter rl4j)
else
	echo -e "\nWill only run checks in given dirs"
	CHECKDIRS=("$@")
fi

echo "IGNORED/ALL IGNORED: PROJECT, PACKAGE NAME, TEST CLASS, TEST METHOD, IGNORED COMMENT, LOCAL PATH TO TEST CLASS"
for CHECKDIR in "${CHECKDIRS[@]}"; do 
	FULLPATH="$DL4JBASEDIR/$CHECKDIR"
	echo -e "\nRUNNING CHECKS ON $CHECKDIR:\n"
	if [ ! -d "$FULLPATH" ]; then
    	echo -e "ERROR: $FULLPATH DOES NOT exist. Supplied paths have to be relative to the deeplearning4j base dir, i.e the parent dir of libnd4j,nd4j etc\nExiting script..." 1>&2
    	exit 7
	fi
	LISTOFTESTDIRS=(`find $FULLPATH -path *src/test`)
	for TESTDIR in "${LISTOFTESTDIRS[@]}"; do
        echo -e "\nRunning in subdir $TESTDIR..."
		LISTOFTESTCLASSES=(`find $TESTDIR -type f -name *.java`)
		for TESTFILE in "${LISTOFTESTCLASSES[@]}"; do
			echo -e "\tChecking test file $TESTFILE..."
			TESTCLASS=`basename $TESTFILE | sed 's/\.java//'`
			PACKAGENAME=`grep -e "^\s*package" $TESTFILE | awk '{print $2}' | tr -d ';' `
			ALLIGNORED=`ignorealltests $TESTFILE` || true
			if [ -n "$ALLIGNORED" ]; then
				echo "ALL IGNORED: $CHECKDIR, $PACKAGENAME, $TESTCLASS, $ALLIGNORED, $TESTFILE"
				continue
			fi
			IGNORED=`ignoredtests "$TESTFILE"` || true
			if [ -n "$IGNORED" ]; then 			
				while read -r line; do
    				echo "IGNORED: $CHECKDIR, $PACKAGENAME, $TESTCLASS, $line, $TESTFILE"
				done <<< "$IGNORED"
			fi
		done
		echo -e "Finished running subdir $TESTDIR"
	done
done

